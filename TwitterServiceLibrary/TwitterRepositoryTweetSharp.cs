using System;
using System.Collections.Generic;
using System.Configuration;
using TweetSharp;

namespace TwitterServiceLibrary
{
   public class TwitterRepositoryTweetSharp : ITwitterRepository
   {
      private TwitterService _service;
      private IList<TweetFromUser> _items = new List<TweetFromUser>();

      private void BuildTweets()
      {
         _items.Clear(); // rebuild the list each time
         BuildUpService();

         var tweets = _service.ListTweetsOnHomeTimeline(50);

         if (tweets == null)
            return;

         foreach (var tweet in tweets)
         {
            _items.Add(new TweetFromUser()
                          {
                             TweetText = tweet.Text,
                             User = new User()
                                       {
                                          ImgAddress = tweet.User.ProfileImageUrl,
                                          ScreenName = tweet.User.ScreenName
                                       }
                          });
         }
      }

      private void BuildUpService()
      {
         _service = new TwitterService(ConfigurationSettings.AppSettings["ConsumerKey"],
                                       ConfigurationSettings.AppSettings["ConsumerSecret"]);

         // you need to get your own token and token secret otherwise use the 
         // other option and have the user of your app be logged into twitter via browser
         // and get the key generated by twitter, read the tweetsharp documentation on github
         // to see how to use this form of authorization
         _service.AuthenticateWith(ConfigurationSettings.AppSettings["Token"],
                                   ConfigurationSettings.AppSettings["TokenSecret"]);
      }

      public IEnumerable<TweetFromUser> GetAll()
      {
         BuildTweets();
         return _items;
      }

      public IEnumerable<TweetFromUser> GetTweetsByUserId(string id)
      {
        //ar tweetsFromUserById = _service.
         return null;
      }

      public IEnumerable<TweetFromUser> GetTweetsByUserName(string userName)
      {
         return null;
      }

      public void Save(TweetFromUser saveThis)
      {
         _service.SendTweet(saveThis.TweetText);
      }

   }
}